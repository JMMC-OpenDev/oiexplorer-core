/*******************************************************************************
 * JMMC project ( http://www.jmmc.fr ) - Copyright (C) CNRS.
 ******************************************************************************/
package fr.jmmc.oiexplorer.core.gui;

import javax.swing.SpinnerNumberModel;

/**
 *
 * @author martin
 */
public class SliderEditor extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    SliderPanel sliderPanel;
    int imagesCount = 0;

    /**
     * Creates new form SliderEditor
     *
     * @param imagesCount
     * @param sliderPanel
     */
    public SliderEditor(int imagesCount, SliderPanel sliderPanel) {
        super();
        initComponents();

        this.imagesCount = imagesCount;
        this.sliderPanel = sliderPanel;
        this.setLocationRelativeTo(null);

        postInit();
    }

    private SliderEditor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelFirstImage = new javax.swing.JLabel();
        jLabelLastImage = new javax.swing.JLabel();
        jConfirmButton = new javax.swing.JButton();
        jCancelButton = new javax.swing.JButton();
        jRangeSliderPanel = new javax.swing.JPanel();
        jSpinnerMinimum = new javax.swing.JSpinner();
        jSpinnerMaximum = new javax.swing.JSpinner();

        setTitle("Range selector");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabelFirstImage.setText("First image");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabelFirstImage, gridBagConstraints);

        jLabelLastImage.setText("Last image");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jLabelLastImage, gridBagConstraints);

        jConfirmButton.setText("Confirm");
        jConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConfirmButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jConfirmButton, gridBagConstraints);

        jCancelButton.setText("Cancel");
        jCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jCancelButton, gridBagConstraints);

        jRangeSliderPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        getContentPane().add(jRangeSliderPanel, gridBagConstraints);

        jSpinnerMinimum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMinimumStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jSpinnerMinimum, gridBagConstraints);

        jSpinnerMaximum.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMaximumStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jSpinnerMaximum, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postInit() {
        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, this.imagesCount, 1);
        this.jSpinnerMinimum.setModel(model);
        this.jSpinnerMinimum.setValue(1);
        model = new SpinnerNumberModel(1, 1, this.imagesCount, 1);
        this.jSpinnerMaximum.setModel(model);
        this.jSpinnerMaximum.setValue(this.imagesCount);
    }

    private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jCancelButtonActionPerformed

    private void jConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConfirmButtonActionPerformed
        if (this.sliderPanel != null) {
            this.sliderPanel.setRange((Integer) jSpinnerMinimum.getValue(), (Integer) jSpinnerMaximum.getValue());
            this.setVisible(false);
        }
    }//GEN-LAST:event_jConfirmButtonActionPerformed

    private void jSpinnerMinimumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMinimumStateChanged
        if ((Integer) jSpinnerMinimum.getValue() < 1) {
            jSpinnerMinimum.setValue(jSpinnerMinimum.getNextValue());
        } else if ((Integer) jSpinnerMinimum.getValue() >= (Integer) jSpinnerMaximum.getValue()) {
            jSpinnerMinimum.setValue(jSpinnerMinimum.getPreviousValue());
        }
    }//GEN-LAST:event_jSpinnerMinimumStateChanged

    private void jSpinnerMaximumStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMaximumStateChanged
        if ((Integer) jSpinnerMaximum.getValue() > this.imagesCount) {
            jSpinnerMaximum.setValue(jSpinnerMaximum.getPreviousValue());
        } else if ((Integer) jSpinnerMaximum.getValue() <= (Integer) jSpinnerMinimum.getValue()) {
            jSpinnerMaximum.setValue(jSpinnerMaximum.getNextValue());
        }
    }//GEN-LAST:event_jSpinnerMaximumStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SliderEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SliderEditor().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jCancelButton;
    private javax.swing.JButton jConfirmButton;
    private javax.swing.JLabel jLabelFirstImage;
    private javax.swing.JLabel jLabelLastImage;
    private javax.swing.JPanel jRangeSliderPanel;
    private javax.swing.JSpinner jSpinnerMaximum;
    private javax.swing.JSpinner jSpinnerMinimum;
    // End of variables declaration//GEN-END:variables
}
